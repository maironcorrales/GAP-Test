@model Model.Entities.User
@using Microsoft.Owin.Security
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <section id="loginForm">
                    @using (Html.BeginForm("Login", "Login", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <h4>Use una cuenta local para iniciar sesión.</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(m => m.username, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.username, new { @class = "form-control" })

                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.user_password, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.user_password, new { @class = "form-control" })

                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Iniciar sesión" class="btn btn-default" />
                            </div>
                        </div>


                    }
                </section>
            </div>
            <div class="col-md-4">
                <section id="socialLoginForm">
                    <h4>Use otro servicio para iniciar sesión.</h4>
                    <hr />
                    @{
                        var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
                        if (loginProviders.Count() == 0)
                        {
                            <div>
                                <p>
                                    No existen servicios de autenticación externos configurados. 
                                </p>
                            </div>
                        }
                        else
                        {
                            using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = "" }))
                            {
                                @Html.AntiForgeryToken()
                                <div id="socialLoginList">
                                    <p>
                                        @foreach (AuthenticationDescription p in loginProviders)
                                        {
                                            <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Inicie sesión con su cuenta @p.Caption">@p.AuthenticationType</button>
                                        }
                                    </p>
                                </div>
                            }
                        }
                    }

                </section>
            </div>
        </div>
    </div>






    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")

</body>
</html>
